<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wit.dao.CompanyProductPriceDao">
	<!--查询所有 -->
	<select id="findAll" resultType="com.wit.model.CompanyProductPrice">
		SELECT
		ID, CompanyProductID,
		MinNum, MaxNum, Price, GrossmMarginPriceID, UserID, CompanyProductCode
		FROM CompanyProductPrice
	</select>

	<!--根据ID查找 -->
	<select id="findById" parameterType="Integer" resultMap="companyProductPriceMap">
		SELECT
		ID, CompanyProductID, MinNum, MaxNum, Price,
		GrossmMarginPriceID,
		UserID, CompanyProductCode
		FROM
		CompanyProductPrice
		WHERE
		ID=#{id}
	</select>
	<!-- companyProductPriceMap -->
	<resultMap type="com.wit.model.CompanyProductPrice" id="companyProductPriceMap">
		<association property="grossMargins" column="grossmMarginPriceId"
			javaType="com.wit.model.GrossMargin" select="findGrossmMarginPrice">
		</association>
	</resultMap>
	<!-- findGrossmMarginPrice -->
	<select id="findGrossmMarginPrice" parameterType="Integer"
		resultType="com.wit.model.GrossMargin">
		select ID, GrossMargin, ProductID, SupplierID, StartTime,
		EndTime, Status,
		CreateBy from GrossMargin where
		id=#{grossmMarginPriceId}
	</select>
	<!--根据IDs查找 -->
	<select id="findByIds" parameterType="hashmap"
		resultType="com.wit.model.CompanyProductPrice">
		SELECT
		c1.ID, c1.CompanyProductID, c1.MinNum, c1.MaxNum,
		c1.Price,
		c1.GrossmMarginPriceID, c1.UserID, c1.CompanyProductCode
		FROM
		CompanyProductPrice as c1 join CompanyProducts as c2 on
		c1.CompanyProductID=c2.id
		WHERE
		c2.CompanyID=#{companyId} and
		c2.ProductID=#{productId}
	</select>

	<!--根据companyProductID查找 -->
	<select id="findByCompanyProductId" parameterType="Integer"
		resultType="com.wit.model.CompanyProductPrice">
		SELECT
		ID, CompanyProductID, MinNum, MaxNum, Price,
		GrossmMarginPriceID, UserID, CompanyProductCode
		FROM
		CompanyProductPrice
		WHERE
		CompanyProductID=#{companyProductID}
	</select>
	<!--根据companyProductID及Page分页查找 -->
	<select id="findByCompanyProductIds" parameterType="hashMap"
		resultMap="companyProductPriceMap">
		SELECT
		ID, CompanyProductID, MinNum, MaxNum, Price,
		ShoppingAddressID, UserID, CompanyProductCode
		FROM
		CompanyProductPrice
		WHERE
		CompanyProductID=#{id} order by ID limit
		#{page.begin},#{page.pageNum};
	</select>

	<!--修改 -->
	<update id="update" parameterType="com.wit.model.CompanyProductPrice">
		UPDATE CompanyProductPrice
		SET
		ID=#{id}, CompanyProductID=#{companyProductId}, MinNum=#{minNum},
		MaxNum=#{maxNum}, Price=#{price},
		GrossmMarginPriceID=#{grossmMarginPriceId}, UserID=#{userId},
		CompanyProductCode=#{companyProductCode}
		WHERE
		ID=#{id}
	</update>

	<!--删除 -->
	<delete id="delete" parameterType="Integer">
		DELETE from
		CompanyProductPrice
		WHERE
		ID=#{id}
	</delete>
	<!-- 根据ID字符数组删除数据 -->
	<delete id="deleteByIds" parameterType="string">
		delete from
		CompanyProductPrice where FIND_IN_SET(id,#{ids})
	</delete>

	<!--增加 -->
	<insert id="insert" parameterType="com.wit.model.CompanyProductPrice">
		INSERT INTO
		CompanyProductPrice (
		CompanyProductID, MinNum, MaxNum, Price, UserID,
		CompanyProductCode
		) VALUES (
		#{companyProductId}, #{minNum}, #{maxNum},
		#{price},#{userId},
		#{companyProductCode}
		)
	</insert>
	<!-- findRows -->
	<select id="findRows" resultType="int" parameterType="Integer">
		SELECT
		COUNT(id)
		FROM CompanyProductPrice WHERE
		CompanyProductID=#{id}
	</select>
</mapper>
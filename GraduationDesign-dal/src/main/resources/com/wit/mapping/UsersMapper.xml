<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wit.dao.UsersDao">
	<!--用户商信息列表 -->
	<select id="findAllUsers" resultType="com.wit.model.Users">
		SELECT
		ID, UserCode,
		UserName,
		UserPsw, UserType, RegTime, Email, Tel, Address, ZipCode,
		FixedlineTel, Fax, Status, RoleID, IsEmailVerify, IsTelVerify,
		CompanyID, DepartmentID, JobsID,ParentID
		FROM Users
	</select>
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="Integer">
		delete from Users where
		ID=#{id}
	</delete>
	<!-- 添加用户 -->
	<insert id="addUser" parameterType="com.wit.model.Users">
		insert into Users (UserCode,
		UserName, UserPsw, UserType, RegTime,
		Email, Tel, Address, ZipCode,
		FixedlineTel,
		Fax, Status, RoleID, IsEmailVerify, IsTelVerify,
		CompanyID, DepartmentID, JobsID,ParentID
		) values(
		#{userCode},
		#{userName},
		#{userPsw},
		#{userType},
		#{regTime},
		#{email},
		#{tel},
		#{address},
		#{zipCode},
		#{fixedlineTel},
		#{fax},
		#{status},
		#{roleId},
		#{isEmailVerify},
		#{isTelVerify},
		#{companyId},
		#{departmentId},
		#{jobsId},
		#{parentID}
		)
	</insert>
	<insert id="AddMerchantUser" parameterType="com.wit.model.Users">
		insert into Users
		(UserCode,UserName, UserPsw, UserType, RegTime,
		Status, RoleID,
		CompanyID, DepartmentID, JobsID,ParentID
		) values(
		#{userCode},
		#{userName},
		#{userPsw},
		#{userType},
		#{regTime},
		#{status},
		#{roleId},
		#{companyId},
		#{departmentId},
		#{jobsId},
		#{parentID}
		)
	</insert>
	<!--根据Id查询用户信息 -->
	<select id="findbyId" parameterType="Integer" resultType="com.wit.model.Users">
		select
		ID, UserCode, UserName, UserPsw, UserType, RegTime,
		Email, Tel,
		Address, ZipCode, FixedlineTel, Fax, Status, RoleID,companyPlant,
		IsEmailVerify, IsTelVerify, CompanyID, DepartmentID, JobsID from Users
		where id=#{userId}
	</select>
	<!--更新用户 -->
	<update id="updateUser" parameterType="com.wit.model.Users">
		update Users set
		userCode=#{userCode},userName=#{userName},
		userPsw=#{userPsw},userType=#{userType},
		regTime=#{regTime},email=#{email},tel=#{tel},
		address=#{address},zipCode=#{zipCode},fixedLineTel=#{fixedLineTel},
		fax=#{fax},status=#{status},roleID=#{roleId},
		isEmailVerify=#{isEmailVerify},
		companyID=#{companyId},departmentID=#{departmentId},jobsID=#{jobsId}
		where id=#{id}
	</update>

	<!--修改密码 -->
	<update id="updatePwd" parameterType="hashMap">
		update Users set
		userPsw=#{userPsw}
		where id=#{id}
	</update>

	<!--修改门户用户密码 -->
	<update id="updateUserPwd" parameterType="String">
		update Users set
		userPsw = #{userPwd}
		where userCode = #{userCode}
	</update>

	<!--门户商户注册 -->
	<insert id="savePurchaser" parameterType="hashMap">
		insert into Users
		(userCode,email,tel,userPsw,userType,companyId,status)
		values(#{userCode},#{email},#{tel},#{userPsw},2,#{companyId},0)
	</insert>

	<!--查询用户 -->
	<select id="findUsers" parameterType="String" resultType="com.wit.model.Users">
		SELECT
		ID, UserCode, UserName,
		UserPsw, UserType, RegTime,
		Email, Tel, Address,
		ZipCode,
		FixedlineTel, Fax, Status, RoleID,
		IsEmailVerify, IsTelVerify,
		CompanyID, DepartmentID, JobsID,companyPlant,
		CompanyName,DepartmentName,JobName,CompanyStatus,CompanyType,UserPhoto,UserUnits,Gender,ParentID
		from vUsers
		where UserCode =IF(#{userCode}='',null,#{userCode})
		OR Email
		=IF(#{userCode}='',null,#{userCode})
		OR Tel
		=IF(#{userCode}='',null,#{userCode})
	</select>
	<select id="findSumByCompanyId" parameterType="Integer"
		resultType="com.wit.model.Users">
		select Sum(CompanyID)as maxNum,Status,CompanyID from Users
		where CompanyID=#{companyId} and Status!=3
		GROUP BY CompanyID
	</select>

	<!--上传用户头像 -->
	<update id="uploadAvatar">
		update Users set userPhoto =
		#{userPhoto}
		where id =
		#{userId}
	</update>

	<!--查询账户信息 -->
	<select id="findByCompanyId" parameterType="Integer" resultType="com.wit.model.Users">
		SELECT
		u.id,u.userCode,u.userName,u.userPsw,u.userType,u.userUnits,u.regTime,u.email,u.tel,u.address,u.zipCode,u.fixedLineTel,u.fax,
		u.status,u.roleId,u.isEmailVerify,u.isTelVerify,u.companyId,u.departmentId,u.jobsId
		FROM Users u where u.companyId = #{companyId} and u.ParentID !=0
	</select>

	<!--查询子账户条数状态为0 -->
	<select id="findSonAccount0" parameterType="Integer" resultType="int">
		SELECT count(id) from Users
		WHERE CompanyID = #{companyId} and ParentID
		!=0 and status = 0
	</select>

	<!--查询子账户条数状态为1 -->
	<select id="findSonAccount1" parameterType="Integer" resultType="int">
		SELECT count(id) from Users
		WHERE CompanyID = #{companyId} and ParentID
		!=0 and status = 1
	</select>

	<!--查询子账户条数状态为2 -->
	<select id="findSonAccount2" parameterType="Integer" resultType="int">
		SELECT count(id) from Users
		WHERE CompanyID = #{companyId} and ParentID
		!=0 and status = 2
	</select>

	<!--查询子账户条数状态为3 -->
	<select id="findSonAccount3" parameterType="Integer" resultType="int">
		SELECT count(id) from Users
		WHERE CompanyID = #{companyId} and ParentID
		!=0 and status = 3
	</select>

	<!--查询管理账户信息 -->
	<select id="findManagerAccountInfo" parameterType="Integer"
		resultType="com.wit.model.Users">
		SELECT
		u.id,u.userCode,u.userName,u.userPsw,u.userType,u.userUnits,u.regTime,u.email,u.tel,u.address,u.zipCode,u.fixedLineTel,u.fax,
		u.status,u.roleId,u.isEmailVerify,u.isTelVerify,u.companyId,u.departmentId,u.jobsId
		FROM Users u where u.companyId = #{companyId} and u.ParentID is null
	</select>

	<!--初始化子账户密码 -->
	<update id="initSonAccount" parameterType="String">
		update Users
		set
		userPsw=#{userPsw}
		where id = #{id}
	</update>
	<!-- 查询子账户数量 -->
	<select id="findSonAccountRowsById" resultType="Integer"
		parameterType="Integer">
		SELECT COUNT(ID) FROM Users
		WHERE ParentID=#{Id} and
		Status=1
	</select>
	<!--userCode校验用户的唯一性 -->
	<select id="checkUser" parameterType="String" resultType="com.wit.model.Users">
		SELECT
		id,userCode,userName,userPsw,userType,userUnits,regTime,email,tel,address,zipCode,fixedLineTel,fax,
		status,roleId,isEmailVerify,isTelVerify,companyId,departmentId,jobsId
		FROM Users
		WHERE
		userCode=#{userCode}
	</select>

	<!--根据公司类型修改用户角色 -->
	<insert id="updateUserRole">
		<![CDATA[
		CALL updateUserRole(#{tmpCompanyId, mode=IN, jdbcType=INTEGER});
		]]>
	</insert>
</mapper>












